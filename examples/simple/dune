(executable
 (name ring)
  (public_name ring_mpst_simple)
  (modules ring)
  (flags ("-g" "-short-paths"))
  (libraries ocaml-mpst))

(library
 (name calc_util)
  (modules calc_util)
  (flags ("-g" "-short-paths"))
  (libraries ocaml-mpst))

(executable
 (name calc)
  (public_name calc_mpst_simple)
  (modules calc)
  (flags ("-g" "-short-paths"))
  (libraries ocaml-mpst calc_util))

(executable
 (name calc_reuse)
  (public_name calc_reuse_mpst_simple)
  (modules calc_reuse)
  (flags ("-g" "-short-paths"))
  (libraries ocaml-mpst calc_util))

(executable
 (name calc_scatter)
  (public_name calc_scatter)
  (modules calc_scatter)
  (flags ("-g" "-short-paths"))
  (libraries ocaml-mpst.lwt ocaml-mpst.async calc_util))

(executable
 (name unfair)
  (public_name unfair_mpst_simple)
  (modules unfair)
  (flags ("-g" "-short-paths"))
  (libraries ocaml-mpst))

(executable
 (name roleenabling)
  (public_name roleenabling_mpst_simple)
  (modules roleenabling)
  (flags ("-g" "-short-paths"))
  (libraries ocaml-mpst))

(executable
 (name roleenabling2)
  (public_name roleenabling2_mpst_simple)
  (modules roleenabling2)
  (flags ("-g" "-short-paths"))
  (libraries ocaml-mpst))

(executable
 (name loops)
  (public_name loops_mpst_simple)
  (modules loops)
  (flags ("-g" "-short-paths"))
  (libraries ocaml-mpst))

(executable
 (name dynlin_test)
  (public_name dynlin_test)
  (modules dynlin_test)
  (flags ("-g" "-short-paths"))
  (libraries ocaml-mpst))

(executable
 (name scatter)
 (public_name scatter)
 (modules scatter)
 (flags ("-g" "-short-paths"))
 (libraries ocaml-mpst.lwt))
