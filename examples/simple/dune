(executable
 (name ring)
  (public_name ocaml-mpst.example.ring_mpst_simple)
  (modules ring)
  (libraries ocaml-mpst))

(library
 (name calc_util)
  (modules calc_util)
  (libraries ocaml-mpst))

(executable
 (name calc)
  (public_name ocaml-mpst.example.calc_mpst_simple)
  (modules calc)
  (libraries ocaml-mpst calc_util))

(executable
 (name calc_lwt)
  (public_name ocaml-mpst.example.calc_mpst_simple_lwt)
  (modules calc_lwt)
  (libraries ocaml-mpst calc_util))

(executable
 (name calc_base)
  (public_name ocaml-mpst.example.calc_base_mpst_simple)
  (modules calc_base)
  (libraries concur-shims ocaml-mpst calc_util))

(executable
 (name calc_reuse)
  (public_name ocaml-mpst.example.calc_reuse_mpst_simple)
  (modules calc_reuse)
  (libraries ocaml-mpst calc_util))

(executable
 (name calc_scatter)
  (public_name ocaml-mpst.example.calc_scatter)
  (modules calc_scatter)
  (libraries ocaml-mpst calc_util))

(executable
 (name unfair)
  (public_name ocaml-mpst.example.unfair_mpst_simple)
  (modules unfair)
  (libraries ocaml-mpst))

(executable
 (name roleenabling)
  (public_name ocaml-mpst.example.roleenabling_mpst_simple)
  (modules roleenabling)
  (libraries ocaml-mpst))

(executable
 (name roleenabling2)
  (public_name ocaml-mpst.example.roleenabling2_mpst_simple)
  (modules roleenabling2)
  (libraries ocaml-mpst))

(executable
 (name loops)
  (public_name ocaml-mpst.example.loops_mpst_simple)
  (modules loops)
  (libraries ocaml-mpst))

(executable
 (name dynlin_test)
  (public_name ocaml-mpst.example.dynlin_test)
  (modules dynlin_test)
  (libraries ocaml-mpst))

(executable
 (name scatter)
 (public_name ocaml-mpst.example.scatter)
 (modules scatter)
 (libraries ocaml-mpst))

(executable
 (name scatter2)
 (public_name ocaml-mpst.example.scatter2)
 (modules scatter2)
 (libraries ocaml-mpst))

(executable
 (name deleg)
  (public_name ocaml-mpst.example.deleg_mpst_simple)
  (modules deleg)
  (libraries ocaml-mpst calc_util))

(library
 (name toy_oauth_util)
  (modules toy_oauth_util)
  (libraries ocaml-mpst))

(executable
 (name toy_oauth)
  (public_name ocaml-mpst.example.toy_oauth)
  (modules toy_oauth)
  (libraries ocaml-mpst toy_oauth_util))

(executable
 (name parallel_loop)
  (public_name ocaml-mpst.example.parallel_loop_mpst_simple)
  (modules parallel_loop)
  (libraries ocaml-mpst))

(executable
 (name trade)
  (public_name ocaml-mpst.example.trade_mpst_simple)
  (modules trade)
  (libraries ocaml-mpst))
