(executable
 (name ring)
  (public_name ring_mpst_mult)
  (modules ring)
  (flags ("-g" "-short-paths"))
  (libraries ocaml-mpst.mult))

(executable
 (name calc)
  (public_name calc_mpst_mult)
  (modules calc)
  (flags ("-g" "-short-paths"))
  (libraries ocaml-mpst.mult))

(executable
 (name calc_scatter)
  (public_name calc_scatter_mpst_mult)
  (modules calc_scatter)
  (flags ("-g" "-short-paths"))
  (libraries ocaml-mpst.mult))

(executable
 (name master_worker)
  (public_name master_worker_mpst_mult)
  (modules master_worker)
  (flags ("-g" "-short-paths"))
  (libraries ocaml-mpst.mult))

; (executable
;  (name calc_reuse)
;   (public_name calc_reuse_mpst_simple)
;   (modules calc_reuse)
;   (flags ("-g" "-short-paths"))
;   (libraries ocaml-mpst.simple))
; 
; ;(executable
; ; (name calc_lin)
; ;  (public_name calc_lin_mpst_simple)
; ;  (modules calc_lin)
; ;  (preprocess (pps ocaml-mpst.ppx))
; ;  (flags ("-g" "-short-paths"))
; ;  (libraries ocaml-mpst.simple))
; ;
; ;(executable
; ; (name deleg_lin)
; ;  (public_name deleg_lin_mpst_simple)
; ;  (modules deleg_lin)
; ;  (preprocess (pps ocaml-mpst.ppx))
; ;  (flags ("-g" "-short-paths"))
; ;  (libraries ocaml-mpst.simple))
; 
; (executable
;  (name unfair)
;   (public_name unfair_mpst_simple)
;   (modules unfair)
;   (flags ("-g" "-short-paths"))
;   (libraries ocaml-mpst.simple))
; 
; (executable
;  (name roleenabling)
;   (public_name roleenabling_mpst_simple)
;   (modules roleenabling)
;   (flags ("-g" "-short-paths"))
;   (libraries ocaml-mpst.simple))
; 
; (executable
;  (name roleenabling2)
;   (public_name roleenabling2_mpst_simple)
;   (modules roleenabling2)
;   (flags ("-g" "-short-paths"))
;   (libraries ocaml-mpst.simple))
; 
